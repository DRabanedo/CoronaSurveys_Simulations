Resumen del contenido de las carpetas

1. Estimadores
2. Funciones
3. Gráficas
4. Modelos de redes
5. Otros
6. Población y encuestas
7. Simulaciones

#####################################
1. Estimadores

%%%%%%%%%%%IMPORTANTE%%%%%%%%%%%%%%%%
Actualizar todos estos scripts despúes
de hacer la actualización con la post 
estratificación.
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Programa de cada uno de los estimadores utilizados en el proyecto. No utilizamos estos scripts directamente,
ya que hemos agrupado todos ellos en un script general (Script funciones (2. Funciones)).

Basic     (Estimador básico) 
Directo   (Método de estimación directa)
GNSUM     (Método general, versión antigua sin grafo direcional)
GNSUM v2  (Método general, versión nueva fiel al modelo)
MLE       (Máxima verosimilitud)
MoS       (Media  de sumas (Mean of sums))
PIMLE     (Máxima verosimilitud plug-in)


#####################################
2. Funciones

Scripts ejecutables con todas las funciones, necesarios para que funcionen las simulaciones correspondientes a
3. Gráficas y 7. Simulaciones.

Script estratificación 
Script funciones (contiene todas las funciones necesarias para las simulaciones)


#####################################
3. Gráficas

Programas para realizar simulaciones individuales sobre las diferentes variables de las que depende la construcción
de la población y la construcción de los estimadores. 
Intentar mantener los valores que no son el que se está variando en un valor que nos permita apreciar el sesgo individual
de cada una de las simulaciones.
Paraca programa hay una gráfica personalizada que plotea lo que es interesante de cada estudio.

%%%%%%%%%%%%%%%%%%%%%%%%%% Valores estándar %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

N = 10000                  #Tamaño de la población general
poblaciones_dis = c(0:10)  #Vector de poblaciones disjuntas
#Vector de probabilidades de pertenencia a cada una de las poblaciones
v_probabilidades = rep(1/length(poblaciones_dis), length(poblaciones_dis)) 
PropHiddenPop = 0.1        #Probabilidad de pertenecer a la población oculta
n_encuesta = 500           #Tamaño de la encuesta a la población general
n_encuesta_hp = 50         #Tamaño de la encuesta a la población oculta
#Número de poblaciones utilizadas para la simulación
n_poblaciones =  length(poblaciones_dis)-1 
sub_memory_factor = 0      #Factor de memoria de las subpoblaciones
memory_factor = 0          #Factor memoria 
visibility_factor = 1      #Factor visibilidad

semilla = 207              #Semilla utilizada para la simulación 
set.seed(semilla)

dim = 1     #Dimensión del grafo
nei = 75    #Número de vecinos con los que vamos a conectar. Son vecinos a cada lado del nodo, luego son 2*nei
p   = 0.1   #Probabilidad de aleatorizar una conexión. Cuanto más grande más aleatorio

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

ARCHIVOS

**Plots**  (Carpeta con algunas de las gráficas de los programas de simulaciones aisladas)

Factor_memoria_subpoblaciones (Simulación que cambia la varianza de la normal que genera las perturbaciones en las
           observacionesde las subpoblaciones que se utilizan para calcular la estimación de la variable
           Reach en los métodos MLE, MoS y PIMLE).
Factor_memoria (Simulación que cambia la varianza de la normal que genera las perturbaciones en las observaciones
           de la variable Reach).
Factor_visibilidad (Simulación que cambia la probabilidad p de la binomial que selecciona cuánta gente conoce realmente
           cada individuo de la población oculta).
Numero_subpoblaciones (Simulación que varía el número de subpoblaciones en los que se divide la población general, para 
           la estimación de la variable Reach de los métodos MLE, PIMLE y MoS).
Tamaño_encuesta (Simulación que varía el tamaño de la encuesta a la población general)
Tamaño_hp (antes de GNSUM)  (Simulación del tamaño de la población oculta, no actualizada)
Tamaño_subpoblaciones (Simulación que varía el tamaño de las poblaciones, tratando poblaciones iguales, iguales pero más 
	   pequeñas (la principal grande), desiguales y muy desiguales).


#####################################
4. Modelos de redes

Modelos de las tres redes que utilizamos para afrontar el problema de la red de contactos. La que decidimos elegir fue Small
World, ya que mantenía la estructura de red a la vez que nos ofrecía cierta aleatoriedad.

Network_Barabasi
Network_erdos
Network_Smallworld

#####################################
5. Otros

Intento_Simulaciones_PoblaciónDisjunta (es el que hemos utilizado para las subpoblaciones de la población de estudio).
Intento_Simulaciones_PoblaciónNoDisjunta (no está bien hecho)


#####################################
6. Población y encuestas

Los dos programas con los que generamos las encuestas, tanto de la población general como de la población oculta, y la población general de estudio.

Encuesta (Función que realiza una encuesta a la población).
Small_World Mixtura (Programa que genera la población sobre la que realizamos el estudio). FALTA ACTUALIZARLA


#####################################
7. Simulaciones y tratamiento de csv

Programas del apartado gráficas, que se repiten 25 para encontrar su ECM, error absoluto, varianza y observar de forma más exacta los diferentes
sesgos que presentan cada uno de los estimadores. Los resultados se guardan en un csv para su futuro tratamiento.

**Simulaciones**
Simulacion_factormemoria (Simulación que cambia la varianza de la normal que genera las perturbaciones en las observaciones
           de la variable Reach).
Simulacion_factormemoriasubpoblaciones (Simulación que cambia la varianza de la normal que genera las perturbaciones en las
           observacionesde las subpoblaciones que se utilizan para calcular la estimación de la variable
           Reach en los métodos MLE, MoS y PIMLE).
Simulacion_factorvisibilidad (Simulación que cambia la probabilidad p de la binomial que selecciona cuánta gente conoce realmente
           cada individuo de la población oculta).
Simulacion_numerosubpoblaciones (Simulación que varía el número de subpoblaciones en los que se divide la población general, para 
           la estimación de la variable Reach de los métodos MLE, PIMLE y MoS).
Simulacion_tamañoencuesta (Simulación que varía el tamaño de la encuesta a la población general)
Simulacion_tamañosubpoblaciones (Simulación que varía el tamaño de las poblaciones, tratando poblaciones iguales, iguales pero más 
	   pequeñas (la principal grande), desiguales y muy desiguales).


**Programas tratamiento csv**
Graficas_simulacion_ecm (Realiza la gráfica del ecm y el csv si quisiéramos guardarlo).
Graficas_simulacion_var (Realiza la gráfica de la varianza y el csv si quisiéramos guardarlo).
Graficas_simulaciones_errorabs (Realiza la gráfica del error absoluto y el csv si quisiéramos guardarlo).
Graficas_simulaciones_sesgo (Realiza la gráfica del sesgo y el csv si quisiéramos guardarlo).

**Graficas csv**
Conjunto de gráficas generadas de cada una de las distribuciones. Para ver la disponibilidad ver 
**Archivos csv** 

#########################################################################################################################
Mejoras propuestas al modelo actual

1. Usar uno de los métodos propuestos en los papers para estimar el factor de visibilidad, ya que estamos suponiendo que 
podemos estimarlo con exacitud cuando esto en la práctica no es posible.
2. 